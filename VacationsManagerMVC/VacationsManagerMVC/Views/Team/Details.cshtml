@using VacationsManagerMVC.Controllers
@model VacationsManagerMVC.ViewModels.TeamDetailsVM

@{
    ViewBag.Title = "Team Details";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/lux/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="container mt-5">
                <h2 class="text-center mb-4">Team Details</h2>
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5>@Model.Name</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Project:</strong> @(Model.Project?.Name ?? "No Project Assigned")</p>
                        <p><strong>Team Leader:</strong> @(Model.TeamLeader?.Username ?? "No Team Leader Assigned")</p>

                        <p><strong>Developers:</strong></p>
                        @if (Model.Developers.Any())
                        {
                            <ul class="list-group">
                                @foreach (var developer in Model.Developers)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @developer.FirstName
                                        <form method="post" action="@Url.Action("RemoveDeveloper", new { teamId = Model.Id, userId = developer.Id })" class="d-inline">
                                            <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                                        </form>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted">No developers assigned</p>
                        }

                        <!-- Add Developer -->
                        <form method="post" action="@Url.Action("AddDeveloper")" class="mt-3">
                            <input type="hidden" name="teamId" value="@Model.Id" />
                            <div class="input-group">
                                <select name="userId" class="form-control" required>
                                    <option value="" disabled selected>Select a developer</option> <!-- Placeholder -->
                                    @if (ViewBag.Users != null && ((IEnumerable<dynamic>)ViewBag.Users).Any())
                                    {
                                        @foreach (var user in ViewBag.Users)
                                        {
                                            <option value="@user.Id">@user.FirstName</option>
                                        }
                                    }
                                    else
                                    {
                                        <option disabled>No available users</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-success">Add</button>
                            </div>
                        </form>

                    </div>

                </div>

                <div class="mt-4">
                    <a href="@Url.Action("List", "Team")" class="btn btn-secondary">Back to Team List</a>
                    <a href="@Url.Action("Edit", "Team", new { id = Model.Id })" class="btn btn-warning">Edit Team</a>
                </div>
            </div>

        </div>
    </div>
</body>
</html>
