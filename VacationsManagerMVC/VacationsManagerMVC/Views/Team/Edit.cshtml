@using VacationsManagerMVC.Controllers
@model VacationsManagerMVC.ViewModels.TeamEditVM

@{
    ViewBag.Title = "Edit Team";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/lux/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <h2 class="text-center mb-4">Edit Team</h2>
                <form asp-action="Edit" asp-controller="Team" method="post" class="needs-validation" novalidate>
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ProjectId" class="form-label"></label>
                        <select asp-for="ProjectId" asp-items="Model.Projects" class="form-control">
                            <option value="">Select Project</option>
                        </select>
                        <span asp-validation-for="ProjectId" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.TeamLeaderId, new { @class = "form-label" })
                        @if (Model.AllTeamLeaders != null && Model.AllTeamLeaders.Any())
                        {
                            <!-- Dropdown for selecting a Team Leader -->
                            @Html.DropDownListFor(model => model.TeamLeaderId, Model.AllTeamLeaders, "Select Team Leader", new { @class = "form-control" })
                        }
                        else
                        {
                            <!-- Display the current Team Leader as text -->
                            <input type="text" class="form-control" 
                                   value="@Model.AllTeamLeaders.FirstOrDefault(tl => tl.Value == Model.TeamLeaderId.ToString())?.Text ?? &quot;No Other Team Leader Available&quot;" 
                                   readonly />

                            @Html.HiddenFor(model => model.TeamLeaderId) <!-- Hidden field to preserve the value -->
                        }
                        @Html.ValidationMessageFor(model => model.TeamLeaderId, "", new { @class = "text-danger" })
                    </div>
                    

                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <a href="@Url.Action("List", "Team")" class="btn btn-secondary">Cancel</a>
                </form>
            </div>
        </div>
    </div>
</body>
</html>
