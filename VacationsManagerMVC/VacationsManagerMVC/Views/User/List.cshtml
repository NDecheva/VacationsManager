@model IEnumerable<VacationsManagerMVC.ViewModels.UserDetailsVM>

@{
    ViewBag.Title = "User List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-10">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h2>User List</h2>
                    </div>
                    <!-- Search Form -->
                    <form method="get" action="@Url.Action("Search", "User")" class="mb-4">
                        <div class="input-group">
                            <input type="text" class="form-control" name="searchTerm" placeholder="Search for users..." value="@ViewBag.SearchTerm" />
                            <button class="btn btn-secondary" type="submit">Search</button>
                        </div>
                    </form>
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.Username)</th>
                                    <th>@Html.DisplayNameFor(model => model.FirstName)</th>
                                    <th>@Html.DisplayNameFor(model => model.LastName)</th>
                                    <th>@Html.DisplayNameFor(model => model.Role)</th>
                                    <th>@Html.DisplayNameFor(model => model.Team)</th>
                                    <th>@Html.DisplayNameFor(model => model.VacationRequests)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>@user.Username</td>
                                        <td>@user.FirstName</td>
                                        <td>@user.LastName</td>
                                        <td>@(user.Role != null ? user.Role.Name : "No role assigned")</td>
                                        <td>@(user.Team != null ? user.Team.Name : "No team assigned")</td>
                                        <td>
                                            @if (user.VacationRequests.Any())
                                            {
                                                <ul>
                                                    @foreach (var request in user.VacationRequests)
                                                    {
                                                        <li>@request.StartDate.ToString("yyyy-MM-dd") - @request.EndDate.ToString("yyyy-MM-dd")</li> <!-- Showing vacation period -->
                                                    }
                                                </ul>
                                            }
                                            else
                                            {
                                                <span>No vacation requests</span>
                                            }
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Details", "User", new { id = user.Id })" class="btn btn-info btn-sm">Details</a>
                                            <a href="@Url.Action("Edit", "User", new { id = user.Id })" class="btn btn-warning btn-sm">Edit</a>
                                            <a href="@Url.Action("Delete", "User", new { id = user.Id })" class="btn btn-danger btn-sm">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="text-center">
                            <a href="@Url.Action("Create", "User")" class="btn btn-success">Create New User</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
