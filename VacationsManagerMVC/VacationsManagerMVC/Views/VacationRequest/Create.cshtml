@using VacationsManagerMVC.Controllers
@using VacationsManager.Shared.Extensions
@model VacationsManagerMVC.ViewModels.VacationRequestEditVM

@{
    ViewBag.Title = "Create Vacation Request";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>

    <!-- Bootstrap Lux Theme -->
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/lux/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <link href="css/VactionRequestCss/create.css" rel="stylesheet"/>

</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="form-container">
                    <h2 class="text-center text-primary mb-4">
                        <i class="bi bi-calendar-check"></i> Create Vacation Request
                    </h2>

                    @using (Html.BeginForm("CreateWithAttachment", "VacationRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="row g-3">
                            <!-- Start Date -->
                            <div class="col-md-6">
                                <label class="form-label fw-bold"><i class="bi bi-calendar"></i> Start Date</label>
                                @Html.TextBoxFor(model => model.StartDate, new
                                    {
                                        @class = "form-control",
                                        @type = "date",
                                        @value = DateTime.Now.ToString("yyyy-MM-dd"),
                                        @min = DateTime.Now.ToString("yyyy-MM-dd")
                                    })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                            </div>

                            <!-- End Date -->
                            <div class="col-md-6">
                                <label class="form-label fw-bold"><i class="bi bi-calendar"></i> End Date</label>
                                @Html.TextBoxFor(model => model.EndDate, new
                                    {
                                        @class = "form-control",
                                        @type = "date",
                                        @value = DateTime.Now.ToString("yyyy-MM-dd"),
                                        @min = DateTime.Now.ToString("yyyy-MM-dd")
                                    })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                            </div>

                            <!-- Half Day -->
                            <div class="col-md-12">
                                <div class="form-check">
                                    @Html.CheckBoxFor(model => model.IsHalfDay, new { @class = "form-check-input" })
                                    <label class="form-check-label fw-bold">
                                        <i class="bi bi-check-circle"></i> Request Half Day Leave
                                    </label>
                                    @Html.ValidationMessageFor(model => model.IsHalfDay, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Requester -->
                            <div class="col-md-12">
                                <label class="form-label fw-bold"><i class="bi bi-person"></i> Requester</label>
                                <input type="text" class="form-control" value="@Model.Requesters.FirstOrDefault(r => r.Value == Model.RequesterId.ToString())?.Text" readonly />
                                @Html.HiddenFor(model => model.RequesterId)
                                @Html.ValidationMessageFor(model => model.RequesterId, "", new { @class = "text-danger" })
                            </div>

                            <!-- Attachment -->
                            <div class="col-md-12">
                                <label class="form-label fw-bold"><i class="bi bi-file-earmark"></i> Attachment (Optional)</label>
                                <input type="file" name="AttachmentFile" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })
                            </div>

                            <!-- Vacation Type -->
                            <div class="col-md-12">
                                <label class="form-label fw-bold"><i class="bi bi-card-list"></i> Vacation Type</label>
                                @Html.DropDownListFor(
                                    model => model.VacationType,
                                    Model.VacationTypes,
                                    "Select Vacation Type",
                                    new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VacationType, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-12 text-center mt-4">
                                <button type="submit" class="btn btn-success btn-lg btn-hover">
                                    <i class="bi bi-save"></i> Save Request
                                </button>
                                <a href="@Url.Action("List", "VacationRequest")" class="btn btn-secondary btn-lg btn-hover">
                                    <i class="bi bi-arrow-left"></i> Cancel
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
