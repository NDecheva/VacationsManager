@model IEnumerable<VacationsManagerMVC.ViewModels.VacationRequestDetailsVM>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vacation Requests</title>


    <!-- Bootstrap & Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.2/dist/lux/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <style>
        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
        }


        .btn:active {
            transform: scale(0.95);
        }


        .toast-container {
            position: fixed;
            top: 10px;
            right: 20px;
            z-index: 1050;
        }
    </style>
</head>
<body>
    <div class="container my-5">


        <!-- Toast Notification Container -->
        <div class="toast-container">
            <div id="approvalToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="bi bi-check-circle-fill"></i> Request successfully approved!
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>


        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="text-primary fw-bold"><i class="bi bi-calendar-check"></i> Vacation Requests</h1>
            <a href="@Url.Action("Create", "VacationRequest")" class="btn btn-primary btn-lg shadow-sm">
                <i class="bi bi-plus-circle"></i> Create Request
            </a>
        </div>


        <!-- Filter Section (Compact and with Clear Button) -->
        <div class="mb-4">
            <form method="get" action="@Url.Action("FilterByDate", "VacationRequest")" class="d-flex align-items-center">
                <div class="form-group me-2">
                    <label for="startDate" class="form-label visually-hidden">Filter by Start Date: </label>
                    <input type="date" name="startDate" id="startDate" class="form-control form-control-sm" value="@ViewBag.FilterDate" />
                </div>
                <button type="submit" class="btn btn-primary btn-sm me-2">
                    <i class="bi bi-funnel"></i> Filter
                </button>
                <!-- Clear Filter Button -->
                <a href="@Url.Action("List", "VacationRequest")" class="btn btn-secondary btn-sm">
                    <i class="bi bi-x-circle"></i> Clear
                </a>
            </form>
        </div>


        <!-- Vacation Requests Table -->
        @if (Model != null && Model.Any())


        {
            <div class="card shadow-lg border-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Half Day</th>
                                <th>Approved</th>
                                <th>Requester</th>
                                <th>Vacation Type</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model)


                            {
                                <tr id="request-row-@request.Id">
                                    <td>@request.StartDate.ToString("yyyy-MM-dd")</td>
                                    <td>@request.EndDate.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <span class="badge @(request.IsHalfDay ? "bg-success" : "bg-secondary")">
                                            @(request.IsHalfDay ? "Yes" : "No")
                                        </span>
                                    </td>
                                    <td id="status-@request.Id">
                                        @if (request.IsApproved)


                                        {
                                            <span class="badge bg-success rounded-pill">
                                                <i class="bi bi-check-circle"></i> Approved
                                            </span>
                                        }


                                        else


                                        {
                                            <span class="badge bg-warning text-dark rounded-pill">
                                                <i class="bi bi-hourglass-split"></i> Pending
                                            </span>
                                        }
                                    </td>
                                    <td>@request.Requester?.Username</td>
                                    <td>@request.VacationType.ToString()</td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("Details", "VacationRequest", new { id = request.Id })" class="btn btn-sm btn-outline-info shadow-sm">
                                                <i class="bi bi-info-circle"></i> Details
                                            </a>
                                            <a href="@Url.Action("Edit", "VacationRequest", new { id = request.Id })" class="btn btn-sm btn-outline-warning shadow-sm">
                                                <i class="bi bi-pencil-square"></i> Edit
                                            </a>
                                            <a href="@Url.Action("Delete", "VacationRequest", new { id = request.Id })" class="btn btn-sm btn-outline-danger shadow-sm">
                                                <i class="bi bi-trash"></i> Delete
                                            </a>


                                            @if ((User.IsInRole("CEO") || (User.IsInRole("TeamLead") && request.Requester?.Role?.Name != "TeamLead")) && !request.IsApproved)


                                            {
                                                <button class="btn btn-sm btn-success shadow-sm approve-btn" data-id="@request.Id">
                                                    <i class="bi bi-check-circle-fill"></i> Approve
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <nav class="mt-4">
                        <ul class="pagination justify-content-center shadow-sm">
                            @if (ViewBag.CurrentPage > 1)


                            {
                                <li class="page-item">
                                    <a class="page-link" href="?pageNumber=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize">Previous</a>
                                </li>
                            }
                            @for (var i = 1; i <= ViewBag.TotalPages; i++)


                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="?pageNumber=@i&pageSize=@ViewBag.PageSize">@i</a>
                                </li>
                            }
                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)


                            {
                                <li class="page-item">
                                    <a class="page-link" href="?pageNumber=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        }


        else


        {
            <div class="alert alert-warning text-center">
                <i class="bi bi-exclamation-circle"></i> No vacation requests available.
            </div>
        }
    </div>


    <!-- AJAX Script for Approving Requests -->
    <script>
        $(document).ready(function () {
            $(".approve-btn").click(function () {
                var requestId = $(this).data("id");
                var button = $(this);


                $.ajax({
                    url: "/VacationRequest/Approve",
                    type: "POST",
                    data: { id: requestId },
                    success: function () {
                        // Hide the button after approval
                        button.fadeOut();


                        // Update the request's status
                        $("#status-" + requestId).html('<span class="badge bg-success rounded-pill"><i class="bi bi-check-circle"></i> Approved</span>');


                        // Show popup (toast) notification at the top of the screen
                        var toast = new bootstrap.Toast(document.getElementById('approvalToast'));
                        toast.show();
                    },
                    error: function () {
                        alert("An error occurred while approving the request.");
                    }
                });
            });
        });
    </script>


</body>
</html>